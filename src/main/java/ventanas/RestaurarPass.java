/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import clases.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
//importamos la variable que anda en interfaces que viene de gestionaruser
import static  ventanas.GestionUser.user_update;
//llamamos la variable estatica que tambien viene ya con el id
import static  ventanas.InformacionUsuario.id;
/**
 *
 * @author Lenovo
 */
public class RestaurarPass extends javax.swing.JFrame {
    //para recoger la variable global del user actualizar las estaticas
    String user_update="";
    //para recoger el id que viene de la variable statica de la vista anterior InfoUsuario
    int id_actualizar_pass;

    /**
     * Creates new form RestaurarPass
     */
    public RestaurarPass() {
        initComponents();
        //esto lo hice yo solo para mandarme desde la vista anterior un id statico y evitar con el user_update que era estatico venir aca a sacar el id y luego hacer otro query de actualizacion
        id_actualizar_pass=InformacionUsuario.id;
        
       
        user_update=GestionUser.user_update;

        
         //TAMANP DE PANTALLA
        setSize(360, 260);
        //NO PUEDA CAMBIARLAS
        setResizable(false);
        
        //titulo de la intefaz de login
        setTitle("EDitar pass de  -"+user_update);
        //centrar la interface en la pantalla
        setLocationRelativeTo(null);
        
        //matamos proceso cuando se loguean destruimos la ejecucion de login para que solo siga esta ventana actual funcionando y ya no se ejecutaria en segundo plano
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        //esto evida que se finalize el programa cuando cierrren esta ventana
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        //ponemos el fondo a la pantalla
         ImageIcon wallpaper= new ImageIcon("C:\\Users\\Lenovo\\Documents\\NetBeansProjects\\datasystem\\src\\main\\java\\imagenes\\wallpaperPrincipal.jpg");
        //ACA LE DECIMOS QUE jLabel_walpaper ESE NOMBRE DE VARIABLE QUE FUE LA QUE PUSIMOS EN EL FORMULARIO AL LABEL PARA EL FONO QUE COJA EL LARGO Y ANCHO Y LO ACOPLE A ESTA IMAGEN O QUE LA IMAGEN SE ACOMODE A ESAS MEDIDAS QUE NO SE VEA MAS GRANDE O AMS FEA SINO ACOMODADA
        Icon icono= new ImageIcon(wallpaper.getImage().getScaledInstance(fondoeditarpassword.getWidth(),fondoeditarpassword.getHeight(),Image.SCALE_DEFAULT));
       //AHORA LE DECIMOS QUE A ESE LABEL LE PONGA LA CONFIGURACION QUE HICIMOS EN LA LINEA ANTERIOR
        fondoeditarpassword.setIcon(icono);
        //esta se pone para que aplique los cambios
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pswordconfirm = new javax.swing.JPasswordField();
        passwordchange = new javax.swing.JPasswordField();
        reestablcerok = new javax.swing.JButton();
        fondoeditarpassword = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cambio de Password");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 190, 40));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Confirmas password:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        pswordconfirm.setText("jPasswordField1");
        pswordconfirm.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(pswordconfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 250, -1));

        passwordchange.setText("jPasswordField1");
        passwordchange.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(passwordchange, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 240, -1));

        reestablcerok.setText("Reestablecer pass");
        reestablcerok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reestablcerokActionPerformed(evt);
            }
        });
        getContentPane().add(reestablcerok, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, -1, -1));

        fondoeditarpassword.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(fondoeditarpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 360, 260));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reestablcerokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reestablcerokActionPerformed
        
        //obtenemos los dos campos del pass de esta manera deben cogerse los pass ya que no tienen getText todo este proceso lo hice y con ayuda de gpt
        char[] pass_recibido,pass_verifi;
        //esto para validar errorres que no este vacios
        int error=0;
        pass_recibido=passwordchange.getPassword();
        String pass_recibido_str = new String(pass_recibido);
        pass_verifi=pswordconfirm.getPassword();
        String pass_verifi_str = new String(pass_verifi);
        //validamos que no este vacio
        if(pass_recibido.equals("")){
          passwordchange.setBackground(Color.red);
          error=error+1;
          }
        
        if(pass_verifi.equals("")){
           pswordconfirm.setBackground(Color.red);
           error=error+1;
        }
        
        //validamos que no allan errores
        if(error==0){
                        //si estan diligenciados validamos que sean iguales y procedemos actualizar la db y si no indicamos al usaurio que ambos campos deben ser iguales
                        //como ambos son string se validan de esta manera con el .equals
                        if(pass_recibido_str.equals(pass_verifi_str)){
                            
                             //actualizamos la pass en db
                                                    try{
                                                                      //creamos el objeto de conexion 
                                                                        Connection cn=Conexion.conectar();
                                                                       // validamos si existe el usuario que trata de loguearse le decimos que seleccione todo donde nombre de usuario sea el 
                                                                       //que estamos mandando pero no me tome el del id que estamos mandando por si encuentra ese user name con este id que se 
                                                                       //supone no estariamos actualizando el user name y estariamos mandando el mismo que tiene
                                                                         String sql = "UPDATE usuarios set password=?  WHERE  id=?";

                                                                         PreparedStatement pst = cn.prepareStatement(sql);
                                                                          pst.setString(1,pass_recibido_str);
                                                                          pst.setInt(2, id);
                                                                          pst.executeUpdate();
                                                                          cn.close();
                                                                          JOptionPane.showMessageDialog(rootPane, "Actualizacion exitosa");

                                                                         

                                                     }catch (SQLException e) {
                                                          System.err.println("error al actualizar pasword ventana RestaurarPasss " + e.getMessage());
                                                          e.printStackTrace();
                                                 }
                        
                            
                        //ponemos los dos campos en rojo y le generamos alerta al usaurio
                        }else{
                            passwordchange.setBackground(Color.red);
                            pswordconfirm.setBackground(Color.red);
                            JOptionPane.showMessageDialog(rootPane, "Ambos campos deben ser iguales, contrase√±as no coinciden por favor valida pas reci "+pass_recibido_str+" pass verificar "+pass_verifi_str);
                        }
        }
        
    }//GEN-LAST:event_reestablcerokActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestaurarPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestaurarPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestaurarPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestaurarPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestaurarPass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fondoeditarpassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField passwordchange;
    private javax.swing.JPasswordField pswordconfirm;
    private javax.swing.JButton reestablcerok;
    // End of variables declaration//GEN-END:variables
}
